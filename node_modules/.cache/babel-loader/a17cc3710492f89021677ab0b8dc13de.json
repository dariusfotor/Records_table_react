{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/Projects/hostinger/src/components/pagination.js\";\nimport React, { Component } from \"react\";\nimport \"../style/style.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport { connect } from \"react-redux\";\nimport { fetchArticleDetails } from \"./fetchData\";\nexport class pagination extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = event => {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    };\n\n    this.state = {\n      currentPage: 1,\n      todosPerPage: 30,\n      optionsPerPage: [{\n        text: \"Option 1\",\n        value: 10\n      }, {\n        text: \"Option 2\",\n        value: 20\n      }, {\n        text: \"Option 3\",\n        value: 30\n      }],\n      valuePerPage: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchArticleDetails();\n  }\n\n  render() {\n    const _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading,\n          comments = _this$props.comments;\n    const valuePerPage = this.state.valuePerPage;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Error! \", error.message);\n    }\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    const _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          todosPerPage = _this$state.todosPerPage; // Logic for displaying todos\n\n    const indexOfLastTodo = currentPage * `${valuePerPage}`;\n    const indexOfFirstTodo = indexOfLastTodo - `${valuePerPage}`;\n    const currentTodos = comments.slice(indexOfFirstTodo, indexOfLastTodo);\n    const renderTodos = currentTodos.map(item => {\n      return React.createElement(\"tbody\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, item.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, item.name, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, item.email)));\n    }); // Logic for displaying page numbers\n\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(comments.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        key: number,\n        id: number,\n        onClick: this.handleClick,\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, number));\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Rodyti\"), React.createElement(Form.Control, {\n      as: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.optionsPerPage))), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Komentarai\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Email\"))), renderTodos), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, renderPageNumbers));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchArticleDetails\n})(pagination);","map":{"version":3,"sources":["/Users/darius/Desktop/Projects/hostinger/src/components/pagination.js"],"names":["React","Component","Table","Form","connect","fetchArticleDetails","pagination","constructor","handleClick","event","setState","currentPage","Number","target","id","state","todosPerPage","optionsPerPage","text","value","valuePerPage","componentDidMount","props","render","error","loading","comments","message","indexOfLastTodo","indexOfFirstTodo","currentTodos","slice","renderTodos","map","item","name","email","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../style/style.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport { connect } from \"react-redux\";\nimport { fetchArticleDetails } from \"./fetchData\";\n\nexport class pagination extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentPage: 1,\n      todosPerPage: 30,\n      optionsPerPage: [\n        {\n          text: \"Option 1\",\n          value: 10\n        },\n        {\n          text: \"Option 2\",\n          value: 20\n        },\n        {\n          text: \"Option 3\",\n          value: 30\n        }\n      ],\n      valuePerPage: \"\"\n    };\n  }\n  componentDidMount() {\n    this.props.fetchArticleDetails();\n  }\n  handleClick = event => {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  };\n\n  render() {\n    const { error, loading, comments } = this.props;\n    const { valuePerPage } = this.state;\n\n    if (error) {\n      return <div>Error! {error.message}</div>;\n    }\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n    const { currentPage, todosPerPage } = this.state;\n\n    // Logic for displaying todos\n    const indexOfLastTodo = currentPage * `${valuePerPage}`;\n    const indexOfFirstTodo = indexOfLastTodo - `${valuePerPage}`;\n    const currentTodos = comments.slice(indexOfFirstTodo, indexOfLastTodo);\n\n    const renderTodos = currentTodos.map(item => {\n      return (\n        <tbody key={item.id}>\n          <tr>\n            <td>{item.id}</td>\n            <td>{item.name} </td>\n            <td>{item.email}</td>\n          </tr>\n        </tbody>\n      );\n    });\n    // Logic for displaying page numbers\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(comments.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    const renderPageNumbers = pageNumbers.map(number => {\n      return (\n        <ul className=\"pagination\">\n          <li\n            key={number}\n            id={number}\n            onClick={this.handleClick}\n            className=\"page-link\"\n          >\n            {number}\n          </li>\n        </ul>\n      );\n    });\n\n    return (\n      <div className=\"container\">\n        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n          <Form.Label>Rodyti</Form.Label>\n          <Form.Control as=\"select\">\n            <option>{this.state.optionsPerPage}</option>\n          </Form.Control>\n        </Form.Group>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Komentarai</th>\n              <th>Email</th>\n            </tr>\n          </thead>\n          {renderTodos}\n        </Table>\n        <ul>{renderPageNumbers}</ul>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, { fetchArticleDetails })(pagination);\n"]},"metadata":{},"sourceType":"module"}