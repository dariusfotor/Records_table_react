{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/Projects/hostinger/src/components/pagination.js\";\nimport React, { Component } from \"react\";\nimport \"../style/style.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Select from \"react-select\";\nimport { connect } from \"react-redux\";\nimport { fetchArticleDetails } from \"./fetchData\";\nexport class pagination extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = event => {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    };\n\n    this.onChangeSelectValue = e => {\n      this.setState({\n        valuePerPage: e.target.value\n      });\n    };\n\n    this.state = {\n      currentPage: 1,\n      todosPerPage: 30,\n      optionsPerPage: [{\n        label: 10\n      }, {\n        label: 20\n      }, {\n        label: 30\n      }, {\n        label: 30\n      }, {\n        label: 30\n      }],\n      valuePerPage: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchArticleDetails();\n  }\n\n  render() {\n    console.log(this.state.valuePerPage);\n    const _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading,\n          comments = _this$props.comments;\n    const valuePerPage = this.state.valuePerPage;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Error! \", error.message);\n    }\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    const _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          todosPerPage = _this$state.todosPerPage; // Logic for displaying todos\n\n    const indexOfLastTodo = currentPage * `${valuePerPage}`;\n    const indexOfFirstTodo = indexOfLastTodo - `${valuePerPage}`;\n    const currentTodos = comments.slice(indexOfFirstTodo, indexOfLastTodo);\n    const renderTodos = currentTodos.map(item => {\n      return React.createElement(\"tbody\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, item.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, item.name, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, item.email)));\n    }); // Logic for displaying page numbers\n\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(comments.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        key: number,\n        id: number,\n        onClick: this.handleClick,\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, number));\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: this.state.valuePerPage,\n      onChange: this.selecteCar,\n      options: this.state.optionsPerPage,\n      placeholder: \"Pasirinkite islaidas uz..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Komentarai\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Email\"))), renderTodos), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, renderPageNumbers));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchArticleDetails\n})(pagination);","map":{"version":3,"sources":["/Users/darius/Desktop/Projects/hostinger/src/components/pagination.js"],"names":["React","Component","Table","Select","connect","fetchArticleDetails","pagination","constructor","handleClick","event","setState","currentPage","Number","target","id","onChangeSelectValue","e","valuePerPage","value","state","todosPerPage","optionsPerPage","label","componentDidMount","props","render","console","log","error","loading","comments","message","indexOfLastTodo","indexOfFirstTodo","currentTodos","slice","renderTodos","map","item","name","email","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number","selecteCar","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,aAApC;AAEA,OAAO,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACxCM,EAAAA,WAAW,GAAG;AACZ;;AADY,SA0BdC,WA1Bc,GA0BAC,KAAK,IAAI;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,WAAW,EAAEC,MAAM,CAACH,KAAK,CAACI,MAAN,CAAaC,EAAd;AADP,OAAd;AAGD,KA9Ba;;AAAA,SA+BdC,mBA/Bc,GA+BQC,CAAC,IAAI;AACzB,WAAKN,QAAL,CAAc;AACZO,QAAAA,YAAY,EAAED,CAAC,CAACH,MAAF,CAASK;AADX,OAAd;AAGD,KAnCa;;AAEZ,SAAKC,KAAL,GAAa;AACXR,MAAAA,WAAW,EAAE,CADF;AAEXS,MAAAA,YAAY,EAAE,EAFH;AAGXC,MAAAA,cAAc,EAAE,CACd;AACEC,QAAAA,KAAK,EAAE;AADT,OADc,EAId;AACEA,QAAAA,KAAK,EAAE;AADT,OAJc,EAOd;AACEA,QAAAA,KAAK,EAAE;AADT,OAPc,EAUd;AACEA,QAAAA,KAAK,EAAE;AADT,OAVc,EAad;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAbc,CAHL;AAkBXL,MAAAA,YAAY,EAAE;AAlBH,KAAb;AAoBD;;AACDM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWnB,mBAAX;AACD;;AAYDoB,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWF,YAAvB;AADO,wBAE8B,KAAKO,KAFnC;AAAA,UAECI,KAFD,eAECA,KAFD;AAAA,UAEQC,OAFR,eAEQA,OAFR;AAAA,UAEiBC,QAFjB,eAEiBA,QAFjB;AAAA,UAGCb,YAHD,GAGkB,KAAKE,KAHvB,CAGCF,YAHD;;AAKP,QAAIW,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACG,OAAnB,CAAP;AACD;;AAED,QAAIF,OAAJ,EAAa;AACX,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAXM,wBAY+B,KAAKV,KAZpC;AAAA,UAYCR,WAZD,eAYCA,WAZD;AAAA,UAYcS,YAZd,eAYcA,YAZd,EAcP;;AACA,UAAMY,eAAe,GAAGrB,WAAW,GAAI,GAAEM,YAAa,EAAtD;AACA,UAAMgB,gBAAgB,GAAGD,eAAe,GAAI,GAAEf,YAAa,EAA3D;AACA,UAAMiB,YAAY,GAAGJ,QAAQ,CAACK,KAAT,CAAeF,gBAAf,EAAiCD,eAAjC,CAArB;AAEA,UAAMI,WAAW,GAAGF,YAAY,CAACG,GAAb,CAAiBC,IAAI,IAAI;AAC3C,aACE;AAAO,QAAA,GAAG,EAAEA,IAAI,CAACxB,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKwB,IAAI,CAACxB,EAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKwB,IAAI,CAACC,IAAV,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACE,KAAV,CAHF,CADF,CADF;AASD,KAVmB,CAApB,CAnBO,CA8BP;;AACA,UAAMC,WAAW,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUd,QAAQ,CAACe,MAAT,GAAkBzB,YAA5B,CAArB,EAAgEsB,CAAC,EAAjE,EAAqE;AACnED,MAAAA,WAAW,CAACK,IAAZ,CAAiBJ,CAAjB;AACD;;AACD,UAAMK,iBAAiB,GAAGN,WAAW,CAACJ,GAAZ,CAAgBW,MAAM,IAAI;AAClD,aACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,GAAG,EAAEA,MADP;AAEE,QAAA,EAAE,EAAEA,MAFN;AAGE,QAAA,OAAO,EAAE,KAAKxC,WAHhB;AAIE,QAAA,SAAS,EAAC,WAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGwC,MANH,CADF,CADF;AAYD,KAbyB,CAA1B;AAeA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWF,YADpB;AAEE,MAAA,QAAQ,EAAE,KAAKgC,UAFjB;AAGE,MAAA,OAAO,EAAE,KAAK9B,KAAL,CAAWE,cAHtB;AAIE,MAAA,WAAW,EAAC,2BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EASE,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,OAAO,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,CADF,EAQGe,WARH,CATF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKW,iBAAL,CAnBF,CADF;AAuBD;;AA/GuC;;AAiH1C,MAAMG,eAAe,GAAG/B,KAAK,IAAI;AAC/B,SAAO;AACLW,IAAAA,QAAQ,EAAEX,KAAK,CAACW,QADX;AAELD,IAAAA,OAAO,EAAEV,KAAK,CAACU,OAFV;AAGLD,IAAAA,KAAK,EAAET,KAAK,CAACS;AAHR,GAAP;AAKD,CAND;;AAQA,eAAexB,OAAO,CAAC8C,eAAD,EAAkB;AAAE7C,EAAAA;AAAF,CAAlB,CAAP,CAAkDC,UAAlD,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../style/style.css\";\nimport Table from \"react-bootstrap/Table\";\nimport Select from \"react-select\";\nimport { connect } from \"react-redux\";\nimport { fetchArticleDetails } from \"./fetchData\";\n\nexport class pagination extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentPage: 1,\n      todosPerPage: 30,\n      optionsPerPage: [\n        {\n          label: 10\n        },\n        {\n          label: 20\n        },\n        {\n          label: 30\n        },\n        {\n          label: 30\n        },\n        { label: 30 }\n      ],\n      valuePerPage: \"\"\n    };\n  }\n  componentDidMount() {\n    this.props.fetchArticleDetails();\n  }\n  handleClick = event => {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  };\n  onChangeSelectValue = e => {\n    this.setState({\n      valuePerPage: e.target.value\n    });\n  };\n\n  render() {\n    console.log(this.state.valuePerPage);\n    const { error, loading, comments } = this.props;\n    const { valuePerPage } = this.state;\n\n    if (error) {\n      return <div>Error! {error.message}</div>;\n    }\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n    const { currentPage, todosPerPage } = this.state;\n\n    // Logic for displaying todos\n    const indexOfLastTodo = currentPage * `${valuePerPage}`;\n    const indexOfFirstTodo = indexOfLastTodo - `${valuePerPage}`;\n    const currentTodos = comments.slice(indexOfFirstTodo, indexOfLastTodo);\n\n    const renderTodos = currentTodos.map(item => {\n      return (\n        <tbody key={item.id}>\n          <tr>\n            <td>{item.id}</td>\n            <td>{item.name} </td>\n            <td>{item.email}</td>\n          </tr>\n        </tbody>\n      );\n    });\n    // Logic for displaying page numbers\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(comments.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    const renderPageNumbers = pageNumbers.map(number => {\n      return (\n        <ul className=\"pagination\">\n          <li\n            key={number}\n            id={number}\n            onClick={this.handleClick}\n            className=\"page-link\"\n          >\n            {number}\n          </li>\n        </ul>\n      );\n    });\n\n    return (\n      <div className=\"container\">\n        <div className=\"select\">\n          <Select\n            value={this.state.valuePerPage}\n            onChange={this.selecteCar}\n            options={this.state.optionsPerPage}\n            placeholder=\"Pasirinkite islaidas uz..\"\n          />\n        </div>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Komentarai</th>\n              <th>Email</th>\n            </tr>\n          </thead>\n          {renderTodos}\n        </Table>\n        <ul>{renderPageNumbers}</ul>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, { fetchArticleDetails })(pagination);\n"]},"metadata":{},"sourceType":"module"}