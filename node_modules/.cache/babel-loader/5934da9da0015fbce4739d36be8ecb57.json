{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/Projects/hostinger/src/components/pagination.js\";\nimport React, { Component } from \"react\";\nimport \"../style/style.css\";\nimport Table from \"react-bootstrap/Table\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { fetchArticleDetails } from \"./fetchData\";\nexport class pagination extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = event => {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        todosPerPage: e.target.value,\n        btnTotalComments: false\n      });\n    };\n\n    this.sort = direction => {\n      this.setState({\n        direction\n      });\n    };\n\n    this.allComments = () => {\n      this.setState({\n        btnTotalComments: true\n      });\n    };\n\n    this.clickedId = id => {\n      console.log(id);\n      const allId = this.props.comments.filter(i => i.id === id);\n      console.log(allId);\n      const newId = [...this.state.selectedID, allId];\n      this.setState({\n        selectedID: newId\n      });\n    };\n\n    this.state = {\n      currentPage: 1,\n      todosPerPage: 20,\n      valuePerPage: \"\",\n      sortedColumn: \"\",\n      direction: \"desc\",\n      selectedID: \"\",\n      btnTotalComments: false\n    };\n    this.sort = this.sort.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchArticleDetails();\n  }\n\n  render() {\n    const _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          todosPerPage = _this$state.todosPerPage,\n          direction = _this$state.direction,\n          btnTotalComments = _this$state.btnTotalComments;\n    const _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading,\n          comments = _this$props.comments;\n    console.log(this.state.selectedID);\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Error! \", error.message);\n    }\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Loading...\");\n    } // Pagination\n\n\n    const indexOfLastTodo = currentPage * todosPerPage;\n    const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n    const currentTodos = comments.slice(indexOfFirstTodo, indexOfLastTodo);\n    const renderTodos = currentTodos.map(item => {\n      return React.createElement(\"tbody\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        onClick: () => this.clickedId(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, item.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, item.name, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, item.email)));\n    });\n    const allComments = comments.map(item => {\n      return React.createElement(\"tbody\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        onClick: this.clickedId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, item.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, item.name, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, item.email)));\n    }); // Logic for displaying page numbers\n\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(comments.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        key: number,\n        id: number,\n        onClick: this.handleClick,\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, number));\n    }); // Sorting\n\n    const sorted = renderTodos.sort((a, b) => {\n      if (direction === \"desc\") {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Rodyti po\"), React.createElement(\"select\", {\n      value: this.state.todosPerPage,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"10\"), React.createElement(\"option\", {\n      value: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"20\"), React.createElement(\"option\", {\n      value: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"30\"), React.createElement(\"option\", {\n      value: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"50\"), React.createElement(\"option\", {\n      value: \"70\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"70\")), React.createElement(\"button\", {\n      className: \"btnAllComments\",\n      onClick: this.allComments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Visi irasai\"), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"thID\",\n      onClick: this.sort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"ID\", \" \", React.createElement(FontAwesomeIcon, {\n      className: \"thIcon\",\n      icon: faSort,\n      size: \"1x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      onClick: this.sort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Komentarai\", \" \", React.createElement(FontAwesomeIcon, {\n      className: \"thIcon\",\n      icon: faSort,\n      size: \"1x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      onClick: this.sort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Email\", \" \", React.createElement(FontAwesomeIcon, {\n      className: \"thIcon\",\n      icon: faSort,\n      size: \"1x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })))), btnTotalComments ? allComments : renderTodos), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, renderPageNumbers));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchArticleDetails\n})(pagination);","map":{"version":3,"sources":["/Users/darius/Desktop/Projects/hostinger/src/components/pagination.js"],"names":["React","Component","Table","FontAwesomeIcon","faSort","connect","fetchArticleDetails","pagination","constructor","handleClick","event","setState","currentPage","Number","target","id","handleChange","e","todosPerPage","value","btnTotalComments","sort","direction","allComments","clickedId","console","log","allId","props","comments","filter","i","newId","state","selectedID","valuePerPage","sortedColumn","bind","componentDidMount","render","error","loading","message","indexOfLastTodo","indexOfFirstTodo","currentTodos","slice","renderTodos","map","item","name","email","pageNumbers","Math","ceil","length","push","renderPageNumbers","number","sorted","a","b","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../style/style.css\";\nimport Table from \"react-bootstrap/Table\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { fetchArticleDetails } from \"./fetchData\";\n\nexport class pagination extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentPage: 1,\n      todosPerPage: 20,\n      valuePerPage: \"\",\n      sortedColumn: \"\",\n      direction: \"desc\",\n      selectedID: \"\",\n      btnTotalComments: false\n    };\n    this.sort = this.sort.bind(this);\n  }\n  componentDidMount() {\n    this.props.fetchArticleDetails();\n  }\n  handleClick = event => {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      todosPerPage: e.target.value,\n      btnTotalComments: false\n    });\n  };\n\n  sort = direction => {\n    this.setState({\n      direction\n    });\n  };\n  allComments = () => {\n    this.setState({\n      btnTotalComments: true\n    });\n  };\n  clickedId = id => {\n    console.log(id);\n    const allId = this.props.comments.filter(i => i.id === id);\n    console.log(allId);\n    const newId = [...this.state.selectedID, allId];\n    this.setState({\n      selectedID: newId\n    });\n  };\n  render() {\n    const {\n      currentPage,\n      todosPerPage,\n      direction,\n      btnTotalComments\n    } = this.state;\n    const { error, loading, comments } = this.props;\n    console.log(this.state.selectedID);\n    if (error) {\n      return <div>Error! {error.message}</div>;\n    }\n\n    if (loading) {\n      return <div className=\"loading\">Loading...</div>;\n    }\n    // Pagination\n    const indexOfLastTodo = currentPage * todosPerPage;\n    const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n    const currentTodos = comments.slice(indexOfFirstTodo, indexOfLastTodo);\n    const renderTodos = currentTodos.map(item => {\n      return (\n        <tbody key={item.id}>\n          <tr onClick={() => this.clickedId(item.id)}>\n            <td>{item.id}</td>\n            <td>{item.name} </td>\n            <td>{item.email}</td>\n          </tr>\n        </tbody>\n      );\n    });\n    const allComments = comments.map(item => {\n      return (\n        <tbody key={item.id}>\n          <tr onClick={this.clickedId}>\n            <td>{item.id}</td>\n            <td>{item.name} </td>\n            <td>{item.email}</td>\n          </tr>\n        </tbody>\n      );\n    });\n    // Logic for displaying page numbers\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(comments.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    const renderPageNumbers = pageNumbers.map(number => {\n      return (\n        <ul className=\"pagination\">\n          <li\n            key={number}\n            id={number}\n            onClick={this.handleClick}\n            className=\"page-link\"\n          >\n            {number}\n          </li>\n        </ul>\n      );\n    });\n    // Sorting\n    const sorted = renderTodos.sort((a, b) => {\n      if (direction === \"desc\") {\n        return 1;\n      } else {\n        return -1;\n      }\n    });\n    return (\n      <div className=\"container\">\n        <label>Rodyti po</label>\n        <select value={this.state.todosPerPage} onChange={this.handleChange}>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n          <option value=\"30\">30</option>\n          <option value=\"50\">50</option>\n          <option value=\"70\">70</option>\n        </select>\n        <button className=\"btnAllComments\" onClick={this.allComments}>\n          Visi irasai\n        </button>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"thID\" onClick={this.sort}>\n                ID{\" \"}\n                <FontAwesomeIcon className=\"thIcon\" icon={faSort} size=\"1x\" />\n              </th>\n              <th onClick={this.sort}>\n                Komentarai{\" \"}\n                <FontAwesomeIcon className=\"thIcon\" icon={faSort} size=\"1x\" />\n              </th>\n              <th onClick={this.sort}>\n                Email{\" \"}\n                <FontAwesomeIcon className=\"thIcon\" icon={faSort} size=\"1x\" />\n              </th>\n            </tr>\n          </thead>\n          {btnTotalComments ? allComments : renderTodos}\n        </Table>\n        <ul>{renderPageNumbers}</ul>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, { fetchArticleDetails })(pagination);\n"]},"metadata":{},"sourceType":"module"}