{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/Projects/hostinger/Records_table/src/components/tableComments.js\";\nimport React, { Component } from \"react\";\nimport \"../style/style.css\";\nimport Table from \"react-bootstrap/Table\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { fetchArticleDetails } from \"./fetchData\";\nimport SelectedComments from \"./selectedComments\";\nexport class tableComments extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = event => {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        todosPerPage: e.target.value,\n        btnTotalComments: false\n      });\n    };\n\n    this.allComments = () => {\n      this.setState({\n        btnTotalComments: true\n      });\n    };\n\n    this.clickedId = (id, i) => {\n      const selectId = this.props.comments.find(i => i.id === id);\n      const newId = [...this.state.selectedID, selectId];\n      this.setState({\n        selectedID: newId\n      });\n\n      if (i !== this.state.isActive) {\n        // const colorId = [...this.state.isActive, i];\n        this.setState({\n          isActive: i\n        });\n      }\n    };\n\n    this.sorted = sortType => {\n      this.setState({\n        sortType\n      });\n    };\n\n    this.state = {\n      currentPage: 1,\n      todosPerPage: 20,\n      valuePerPage: \"\",\n      sortedColumn: \"\",\n      direction: \"desc\",\n      selectedID: [],\n      isActive: null,\n      sortType: \"asc\",\n      btnTotalComments: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchArticleDetails();\n  }\n\n  render() {\n    console.log(this.state.isActive);\n    const _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          todosPerPage = _this$state.todosPerPage,\n          btnTotalComments = _this$state.btnTotalComments;\n    const _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading,\n          comments = _this$props.comments;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Error! \", error.message);\n    }\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Loading...\");\n    } // Pagination\n\n\n    const indexOfLastTodo = currentPage * todosPerPage;\n    const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n    const currentComments = comments.slice(indexOfFirstTodo, indexOfLastTodo); // Sorting\n\n    const sortedAllComments = this.props.comments.sort((a, b) => {\n      const sorted = this.state.sortType === \"asc\" ? 1 : -1;\n      return sorted * a.id - b.id;\n    }); // Mapping comments per page\n\n    const renderTodos = currentComments.map((item, i) => {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        key: i,\n        onClick: () => this.clickedId(item.id, i),\n        style: this.state.isActive === i ? {\n          background: \"green\"\n        } : {\n          background: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, item.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, item.name, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, item.email)));\n    });\n    const allComments = sortedAllComments.map((x, index) => {\n      return React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        key: index,\n        style: this.state.isActive === index ? {\n          background: \"green\"\n        } : {\n          background: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        onClick: () => this.clickedId(x.id, index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, x.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, x.name, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, x.email)));\n    }); // Logic for displaying page numbers\n\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(comments.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        key: number,\n        id: number,\n        onClick: this.handleClick,\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, number));\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(SelectedComments, {\n      selectedComments: this.state.selectedID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Irasu lentele\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Rodyti po\"), React.createElement(\"select\", {\n      value: this.state.todosPerPage,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"10\"), React.createElement(\"option\", {\n      value: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"20\"), React.createElement(\"option\", {\n      value: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"30\"), React.createElement(\"option\", {\n      value: \"50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"50\"), React.createElement(\"option\", {\n      value: \"70\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"70\")), React.createElement(\"button\", {\n      className: \"btnAllComments\",\n      onClick: this.allComments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Visi irasai\"), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"thID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"ID\", React.createElement(FontAwesomeIcon, {\n      onClick: () => this.sorted(\"dsc\"),\n      className: \"thIcon\",\n      icon: faSort,\n      size: \"1x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Komentarai\", React.createElement(FontAwesomeIcon, {\n      className: \"thIcon\",\n      icon: faSort,\n      size: \"1x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Email\", React.createElement(FontAwesomeIcon, {\n      className: \"thIcon\",\n      icon: faSort,\n      size: \"1x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })))), btnTotalComments ? allComments : renderTodos), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, renderPageNumbers));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchArticleDetails\n})(tableComments);","map":{"version":3,"sources":["/Users/darius/Desktop/Projects/hostinger/Records_table/src/components/tableComments.js"],"names":["React","Component","Table","FontAwesomeIcon","faSort","connect","fetchArticleDetails","SelectedComments","tableComments","constructor","handleClick","event","setState","currentPage","Number","target","id","handleChange","e","todosPerPage","value","btnTotalComments","allComments","clickedId","i","selectId","props","comments","find","newId","state","selectedID","isActive","sorted","sortType","valuePerPage","sortedColumn","direction","componentDidMount","render","console","log","error","loading","message","indexOfLastTodo","indexOfFirstTodo","currentComments","slice","sortedAllComments","sort","a","b","renderTodos","map","item","background","name","email","x","index","pageNumbers","Math","ceil","length","push","renderPageNumbers","number","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../style/style.css\";\nimport Table from \"react-bootstrap/Table\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport { fetchArticleDetails } from \"./fetchData\";\nimport SelectedComments from \"./selectedComments\";\n\nexport class tableComments extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentPage: 1,\n      todosPerPage: 20,\n      valuePerPage: \"\",\n      sortedColumn: \"\",\n      direction: \"desc\",\n      selectedID: [],\n      isActive: null,\n      sortType: \"asc\",\n      btnTotalComments: false\n    };\n  }\n  componentDidMount() {\n    this.props.fetchArticleDetails();\n  }\n  handleClick = event => {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      todosPerPage: e.target.value,\n      btnTotalComments: false\n    });\n  };\n\n  allComments = () => {\n    this.setState({\n      btnTotalComments: true\n    });\n  };\n  clickedId = (id, i) => {\n    const selectId = this.props.comments.find(i => i.id === id);\n    const newId = [...this.state.selectedID, selectId];\n    this.setState({\n      selectedID: newId\n    });\n    if (i !== this.state.isActive) {\n      // const colorId = [...this.state.isActive, i];\n      this.setState({\n        isActive: i\n      });\n    }\n  };\n  sorted = sortType => {\n    this.setState({ sortType });\n  };\n  render() {\n    console.log(this.state.isActive);\n    const { currentPage, todosPerPage, btnTotalComments } = this.state;\n    const { error, loading, comments } = this.props;\n    if (error) {\n      return <div>Error! {error.message}</div>;\n    }\n    if (loading) {\n      return <div className=\"loading\">Loading...</div>;\n    }\n    // Pagination\n    const indexOfLastTodo = currentPage * todosPerPage;\n    const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n    const currentComments = comments.slice(indexOfFirstTodo, indexOfLastTodo);\n    // Sorting\n    const sortedAllComments = this.props.comments.sort((a, b) => {\n      const sorted = this.state.sortType === \"asc\" ? 1 : -1;\n      return sorted * a.id - b.id;\n    });\n\n    // Mapping comments per page\n    const renderTodos = currentComments.map((item, i) => {\n      return (\n        <tbody>\n          <tr\n            key={i}\n            onClick={() => this.clickedId(item.id, i)}\n            style={\n              this.state.isActive === i\n                ? { background: \"green\" }\n                : { background: \"none\" }\n            }\n          >\n            <td>{item.id}</td>\n            <td>{item.name} </td>\n            <td>{item.email}</td>\n          </tr>\n        </tbody>\n      );\n    });\n    const allComments = sortedAllComments.map((x, index) => {\n      return (\n        <tbody>\n          <tr\n            key={index}\n            style={\n              this.state.isActive === index\n                ? { background: \"green\" }\n                : { background: \"none\" }\n            }\n          >\n            <td onClick={() => this.clickedId(x.id, index)}>{x.id}</td>\n            <td>{x.name} </td>\n            <td>{x.email}</td>\n          </tr>\n        </tbody>\n      );\n    });\n    // Logic for displaying page numbers\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(comments.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    const renderPageNumbers = pageNumbers.map(number => {\n      return (\n        <ul className=\"pagination\">\n          <li\n            key={number}\n            id={number}\n            onClick={this.handleClick}\n            className=\"page-link\"\n          >\n            {number}\n          </li>\n        </ul>\n      );\n    });\n    return (\n      <div className=\"container\">\n        <SelectedComments selectedComments={this.state.selectedID} />\n        <h1>Irasu lentele</h1>\n        <label>Rodyti po</label>\n        <select value={this.state.todosPerPage} onChange={this.handleChange}>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n          <option value=\"30\">30</option>\n          <option value=\"50\">50</option>\n          <option value=\"70\">70</option>\n        </select>\n        <button className=\"btnAllComments\" onClick={this.allComments}>\n          Visi irasai\n        </button>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"thID\">\n                ID\n                <FontAwesomeIcon\n                  onClick={() => this.sorted(\"dsc\")}\n                  className=\"thIcon\"\n                  icon={faSort}\n                  size=\"1x\"\n                />\n              </th>\n              <th>\n                Komentarai\n                <FontAwesomeIcon className=\"thIcon\" icon={faSort} size=\"1x\" />\n              </th>\n              <th>\n                Email\n                <FontAwesomeIcon className=\"thIcon\" icon={faSort} size=\"1x\" />\n              </th>\n            </tr>\n          </thead>\n          {btnTotalComments ? allComments : renderTodos}\n        </Table>\n        <ul>{renderPageNumbers}</ul>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, { fetchArticleDetails })(tableComments);\n"]},"metadata":{},"sourceType":"module"}