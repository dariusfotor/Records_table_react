{"ast":null,"code":"var _jsxFileName = \"/Users/darius/Desktop/Projects/hostinger/src/components/pagination.js\";\nimport React, { Component } from \"react\";\nimport \"../style/style.css\";\nimport { connect } from \"react-redux\";\nimport { fetchArticleDetails } from \"./fetchData\";\nexport class pagination extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = event => {\n      this.setState({\n        currentPage: Number(event.target.id)\n      });\n    };\n\n    this.state = {\n      currentPage: 1,\n      todosPerPage: 20\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchArticleDetails();\n  }\n\n  render() {\n    const _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Error! \", error.message);\n    }\n\n    if (loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    const _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          todosPerPage = _this$state.todosPerPage;\n    const comments = this.props.comments; // Logic for displaying todos\n\n    const indexOfLastTodo = currentPage * todosPerPage;\n    const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n    const currentTodos = comments.slice(indexOfFirstTodo, indexOfLastTodo);\n    const renderTodos = currentTodos.map(item => {\n      return React.createElement(\"tbody\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, item.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, item.name, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, item.email)));\n    }); // Logic for displaying page numbers\n\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(comments.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        key: number,\n        id: number,\n        onClick: this.handleClick,\n        className: \"page-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, number));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Komentarai\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Email\"))), renderTodos), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, renderPageNumbers), React.createElement(\"ul\", {\n      id: \"page-numbers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchArticleDetails\n})(pagination);","map":{"version":3,"sources":["/Users/darius/Desktop/Projects/hostinger/src/components/pagination.js"],"names":["React","Component","connect","fetchArticleDetails","pagination","constructor","handleClick","event","setState","currentPage","Number","target","id","state","todosPerPage","componentDidMount","props","render","error","loading","message","comments","indexOfLastTodo","indexOfFirstTodo","currentTodos","slice","renderTodos","map","item","name","email","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../style/style.css\";\nimport { connect } from \"react-redux\";\nimport { fetchArticleDetails } from \"./fetchData\";\n\nexport class pagination extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentPage: 1,\n      todosPerPage: 20\n    };\n  }\n  componentDidMount() {\n    this.props.fetchArticleDetails();\n  }\n  handleClick = event => {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  };\n\n  render() {\n    const { error, loading } = this.props;\n\n    if (error) {\n      return <div>Error! {error.message}</div>;\n    }\n\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n    const { currentPage, todosPerPage } = this.state;\n    const { comments } = this.props;\n\n    // Logic for displaying todos\n    const indexOfLastTodo = currentPage * todosPerPage;\n    const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n    const currentTodos = comments.slice(indexOfFirstTodo, indexOfLastTodo);\n\n    const renderTodos = currentTodos.map(item => {\n      return (\n        <tbody key={item.id}>\n          <tr>\n            <td>{item.id}</td>\n            <td>{item.name} </td>\n            <td>{item.email}</td>\n          </tr>\n        </tbody>\n      );\n    });\n    // Logic for displaying page numbers\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(comments.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n    const renderPageNumbers = pageNumbers.map(number => {\n      return (\n        <ul className=\"pagination\">\n          <li\n            key={number}\n            id={number}\n            onClick={this.handleClick}\n            className=\"page-link\"\n          >\n            {number}\n          </li>\n        </ul>\n      );\n    });\n\n    return (\n      <div>\n        <table striped bordered hover>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Komentarai</th>\n              <th>Email</th>\n            </tr>\n          </thead>\n          {renderTodos}\n        </table>\n        <ul>{renderPageNumbers}</ul>\n        <ul id=\"page-numbers\">{}</ul>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, { fetchArticleDetails })(pagination);\n"]},"metadata":{},"sourceType":"module"}